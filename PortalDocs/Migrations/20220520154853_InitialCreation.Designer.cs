// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PortalDocs.Data;

namespace PortalDocs.Migrations
{
    /// <summary>
    /// Update Model
    /// </summary>
    [DbContext(typeof(AppDbContext))]
    [Migration("20220520154853_InitialCreation")]
    partial class InitialCreation
    {
        /// <summary>
        /// implementando Migration
        /// </summary>
        /// <param name="modelBuilder"></param>
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.16");

            modelBuilder.Entity("PortalDocs.Models.DocumentoSolicitacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DocumentoRequerido")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SolicitacaoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TipoDocumento")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SolicitacaoId");

                    b.ToTable("DocumentoSolicitacoes");
                });

            modelBuilder.Entity("PortalDocs.Models.DocumentosParceiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DocumentosEmpresa")
                        .HasColumnType("TEXT");

                    b.Property<string>("DocumentosFuncionarios")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParceiroId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParceiroId");

                    b.ToTable("DocumentosParceiros");
                });

            modelBuilder.Entity("PortalDocs.Models.Funcionarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParceiroId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParceiroId");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("PortalDocs.Models.Parceiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CNPJ")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SolicitacaoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SolicitacaoId");

                    b.ToTable("Parceiros");
                });

            modelBuilder.Entity("PortalDocs.Models.Solicitacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ObservacaoSolicitacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Solicitante")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Solicitacoes");
                });

            modelBuilder.Entity("PortalDocs.Models.DocumentoSolicitacao", b =>
                {
                    b.HasOne("PortalDocs.Models.Solicitacao", null)
                        .WithMany("Documentos")
                        .HasForeignKey("SolicitacaoId");
                });

            modelBuilder.Entity("PortalDocs.Models.DocumentosParceiro", b =>
                {
                    b.HasOne("PortalDocs.Models.Parceiro", null)
                        .WithMany("Documentos")
                        .HasForeignKey("ParceiroId");
                });

            modelBuilder.Entity("PortalDocs.Models.Funcionarios", b =>
                {
                    b.HasOne("PortalDocs.Models.Parceiro", null)
                        .WithMany("Funcionarios")
                        .HasForeignKey("ParceiroId");
                });

            modelBuilder.Entity("PortalDocs.Models.Parceiro", b =>
                {
                    b.HasOne("PortalDocs.Models.Solicitacao", null)
                        .WithMany("Parceiro")
                        .HasForeignKey("SolicitacaoId");
                });

            modelBuilder.Entity("PortalDocs.Models.Parceiro", b =>
                {
                    b.Navigation("Documentos");

                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("PortalDocs.Models.Solicitacao", b =>
                {
                    b.Navigation("Documentos");

                    b.Navigation("Parceiro");
                });
#pragma warning restore 612, 618
        }
    }
}
